name: CI (MeMantra Mobile)

on:
  pull_request:
    branches: [main]
    paths-ignore: ['**/*.md']
  push:
    branches: [main]
    paths-ignore: ['**/*.md']

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  mobile-ci:
    name: Lint • Typecheck • Test • Build
    runs-on: ubuntu-latest
    env:
      CI: true
      HUSKY: 0
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9
          run_install: false

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm -w lint

      - name: Typecheck
        run: pnpm -w typecheck

      - name: Test (Jest + Expo)
        run: pnpm -w test -- --coverage

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=MeMantraa_MeMantra \
            -Dsonar.organization=MeMantraa \
            -Dsonar.sources=apps/mobile,apps/backend \
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/test/**,**/*.test.*,**/*.spec.*,**/.expo/**,**/.turbo/**,**/ios/**,**/android/**,**/coverage/*.html,**/coverage/*.json \
            -Dsonar.javascript.lcov.reportPaths=apps/mobile/coverage/lcov.info,apps/backend/coverage/lcov.info \
            -Dsonar.typescript.lcov.reportPaths=apps/mobile/coverage/lcov.info,apps/backend/coverage/lcov.info \
            -Dsonar.host.url=https://sonarcloud.io

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            apps/mobile/coverage
            apps/backend/coverage
            coverage
          if-no-files-found: ignore

      - name: Build (Turborepo)
        run: pnpm -w build
