name: CI (MeMantra Mobile)

on:
  pull_request:
    branches: [main]
    paths:
      - 'apps/mobile/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - 'turbo.json'
  push:
    branches: [main]
    paths:
      - 'apps/mobile/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - 'turbo.json'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: true

jobs:
  mobile-ci:
    name: Lint • Typecheck • Test • Build (mobile)
    runs-on: ubuntu-latest
    env:
      CI: true
      HUSKY: 0
      NODE_ENV: test
      # Safe default for forked PRs where secrets are not exposed
      JWT_SECRET: testjwtsecret

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # helps turborepo hashing

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9
          run_install: false

      # Use the actual secret if available (not available to forked PRs)
      - name: Prefer repository JWT secret if present
        if: ${{ secrets.JWT_SECRET != '' }}
        run: echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> "$GITHUB_ENV"

      - name: Resolve pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Lint (mobile)
        run: pnpm --filter ./apps/mobile... lint

      - name: Typecheck (mobile)
        run: pnpm --filter ./apps/mobile... typecheck

      - name: Test (mobile)
        run: pnpm --filter ./apps/mobile... test -- --coverage

      - name: Upload coverage (mobile)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-coverage
          path: apps/mobile/coverage
          if-no-files-found: ignore

      - name: Build (mobile)
        run: pnpm --filter ./apps/mobile... build
